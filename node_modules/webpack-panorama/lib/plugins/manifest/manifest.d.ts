import WebpackError from 'webpack/lib/WebpackError';
import manifestSchema from './manifest.schema.json';
export { manifestSchema };
export interface ManifestEntry {
    /**
     * Module(s) that are loaded upon startup.
     */
    import: string;
    /**
     * Specifies the name of the output file on disk.
     *
     * @example
     * { import: './loading-screen/layout.xml', filename: 'custom_loading_screen.xml' }
     */
    filename?: string | null;
    /**
     * Type of a Custom UI.
     *
     * When not provided, this entry would be omitted from `custom_ui_manifest.xml` file.
     *
     * Can be defined only for XML entrypoints.
     */
    type?: ManifestEntryType | null;
}
export declare type ManifestEntryType = 'GameSetup' | 'HeroSelection' | 'Hud' | 'HudTopBar' | 'FlyoutScoreboard' | 'GameInfo' | 'EndScreen';
export declare class PanoramaManifestError extends WebpackError {
    name: string;
    constructor(message: string, manifestName?: string);
}
export declare function validateManifest(manifest: ManifestEntry[], manifestName?: string): void;
//# sourceMappingURL=manifest.d.ts.map