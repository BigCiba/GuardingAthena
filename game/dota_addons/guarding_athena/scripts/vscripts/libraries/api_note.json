{"Global":"全局函数，可以在没有任何类的情况下调用。","CBaseAnimating":"extends [CBaseModelEntity](../CBaseModelEntity)","CBaseCombatCharacter":"extends [CBaseFlex](../CBaseFlex)","CBaseEntity":"extends [CEntityInstance](../CEntityInstance)","CBaseFlex":"extends [CBaseAnimating](../CBaseAnimating)","CBaseModelEntity":"extends [CBaseEntity](../CBaseEntity)","CBasePlayer":"extends [CBaseCombatCharacter](../CBaseCombatCharacter)","CBaseTrigger":"extends [CBaseEntity](../CBaseEntity)","CBodyComponent":"No Description Set","CCustomGameEventManager":"全局访问变量：CustomGameEventManager","CCustomNetTableManager":"全局访问变量：CustomNetTables","CDOTABaseAbility":"extends [CBaseEntity](../CBaseEntity)","CDOTABaseGameMode":"extends [CBaseEntity](../CBaseEntity)","CDOTAGameManager":"No Description Set","CDOTAGamerules":"全局访问变量：GameRules","CDOTAPlayer":"extends [CBaseAnimating](../CBaseAnimating)","CDOTATutorial":"全局访问变量：Tutorial","CDOTAVoteSystem":"No Description Set","CDOTA_Ability_Animation_Attack":"extends [CDOTABaseAbility](../CDOTABaseAbility)","CDOTA_Ability_Animation_TailSpin":"extends [CDOTABaseAbility](../CDOTABaseAbility)","CDOTA_Ability_DataDriven":"extends [CDOTABaseAbility](../CDOTABaseAbility)","CDOTA_Ability_Lua":"extends [CDOTABaseAbility](../CDOTABaseAbility)","CDOTA_Ability_Nian_Dive":"extends [CDOTABaseAbility](../CDOTABaseAbility)","CDOTA_Ability_Nian_Leap":"extends [CDOTABaseAbility](../CDOTABaseAbility)","CDOTA_Ability_Nian_Roar":"extends [CDOTABaseAbility](../CDOTABaseAbility)","CDOTA_BaseNPC":"extends [CBaseFlex](../CBaseFlex)","CDOTA_BaseNPC_Building":"extends [CDOTA_BaseNPC](../CDOTA_BaseNPC)","CDOTA_BaseNPC_Creature":"extends [CDOTA_BaseNPC](../CDOTA_BaseNPC)","CDOTA_BaseNPC_Hero":"extends [CDOTA_BaseNPC](../CDOTA_BaseNPC)","CDOTA_BaseNPC_RotatableBuilding":"extends [CDOTA_BaseNPC](../CDOTA_BaseNPC)","CDOTA_BaseNPC_Shop":"extends [CDOTA_BaseNPC_Building](../CDOTA_BaseNPC_Building)","CDOTA_BaseNPC_Trap_Ward":"extends [CDOTA_BaseNPC_Creature](../CDOTA_BaseNPC_Creature)","CDOTA_Buff":"No Description Set","CDOTA_CustomUIManager":"全局访问变量：CustomUI","CDOTA_Item":"extends [CDOTABaseAbility](../CDOTABaseAbility)","CDOTA_ItemSpawner":"extends [CBaseEntity](../CBaseEntity)","CDOTA_Item_DataDriven":"extends [CDOTA_Item](../CDOTA_Item)","CDOTA_Item_Lua":"extends [CDOTA_Item](../CDOTA_Item)","CDOTA_Item_Physical":"extends [CBaseAnimating](../CBaseAnimating)","CDOTA_MapTree":"extends [CBaseEntity](../CBaseEntity)","CDOTA_Modifier_Lua":"extends [CDOTA_Buff](../CDOTA_Buff)","CDOTA_Modifier_Lua_Horizontal_Motion":"extends [CDOTA_Modifier_Lua](../CDOTA_Modifier_Lua)","CDOTA_Modifier_Lua_Motion_Both":"extends [CDOTA_Modifier_Lua](../CDOTA_Modifier_Lua)","CDOTA_Modifier_Lua_Vertical_Motion":"extends [CDOTA_Modifier_Lua](../CDOTA_Modifier_Lua)","CDOTA_PlayerResource":"extends [CBaseEntity](../CBaseEntity)","CDOTA_ShopTrigger":"extends [CBaseTrigger](../CBaseTrigger)","CDOTA_SimpleObstruction":"extends [CBaseEntity](../CBaseEntity)","CDOTA_Unit_Courier":"extends [CDOTA_BaseNPC](../CDOTA_BaseNPC)","CDOTA_Unit_Nian":"extends [CDOTA_BaseNPC_Creature](../CDOTA_BaseNPC_Creature)","CDebugOverlayScriptHelper":"No Description Set","CDotaQuest":"extends [CBaseEntity](../CBaseEntity)","CDotaSubquestBase":"extends [CBaseEntity](../CBaseEntity)","CEntities":"全局访问变量：Entities","CEntityInstance":"No Description Set","CEntityScriptFramework":"No Description Set","CEnvEntityMaker":"extends [CBaseEntity](../CBaseEntity)","CEnvProjectedTexture":"extends [CBaseEntity](../CBaseEntity)","CInfoData":"extends [CBaseEntity](../CBaseEntity)","CInfoWorldLayer":"extends [CBaseEntity](../CBaseEntity)","CLogicScript":"extends [CBaseEntity](../CBaseEntity)","CMarkupVolumeTagged":"extends [CBaseEntity](../CBaseEntity)","CNativeOutputs":"No Description Set","CParticleSystem":"extends [CBaseModelEntity](../CBaseModelEntity)","CPhysicsProp":"extends [CBaseAnimating](../CBaseAnimating)","CPointClientUIWorldPanel":"extends [CBaseModelEntity](../CBaseModelEntity)","CPointTemplate":"extends [CBaseEntity](../CBaseEntity)","CPointWorldText":"extends [CBaseModelEntity](../CBaseModelEntity)","CPropHMDAvatar":"extends [CBaseAnimating](../CBaseAnimating)","CPropVRHand":"extends [CBaseAnimating](../CBaseAnimating)","CSceneEntity":"extends [CBaseEntity](../CBaseEntity)","CScriptHeroList":"全局访问变量：HeroList","CScriptKeyValues":"No Description Set","CScriptParticleManager":"全局访问变量：ParticleManager","CScriptPrecacheContext":"No Description Set","Convars":"extends [Convars](../Convars)\n全局访问变量：ConVars","GlobalSys":"extends [GlobalSys](../GlobalSys)","GridNav":"extends [GridNav](../GridNav)","ProjectileManager":"extends [ProjectileManager](../ProjectileManager)","SteamInfo":"extends [SteamInfo](../SteamInfo)","ABILITY_TYPES":"技能类型","AbilityLearnResult_t":"技能可升级类型","AddFOWViewer":{"description":"为指定队伍添加临时视野","example":"-- 每帧提供一帧空中视野模拟飞行视野\nfunction modifier_night_stalker_darkness:OnIntervalThink()\n\tlocal hCaster = self:GetCaster()\n\tlocal iTeamNumber = hCaster:GetTeamNumber()\n\tlocal vPosition = hCaster:GetAbsOrigin()\n\tlocal iRadius = self:GetAbility():GetSpecialValueFor(\"radius\")\n\tAddFOWViewer(iTeamNumber, vPosition, iRadius, FrameTime(), false)\nend","params":{"Vector_2":{"description":"位置","params_name":"vLocation"},"bool_5":{"description":"是否有视野阻挡","params_name":"bObstructedVision"},"float_3":{"description":"半径","params_name":"flRadius"},"float_4":{"description":"持续时间","params_name":"flDuration"},"int_1":{"description":"队伍ID","params_name":"nTeamID"}}},"PassivesDisabled":{"description":"判断该单位是否被禁用被动","params":{},"example":"self:GetCaster():PassivesDisabled()"},"AddNewModifier":{"description":"给一个单位添加modifier，hModifierTable可以传入持续时间和其他自定义参数，自定义参数可以在modifier中获得。","params":{"hCaster":{"params_name":"hCaster","description":"来源单位"},"hAbility":{"params_name":"hAbility","description":"来源技能"},"pszScriptName":{"params_name":"pszScriptName","description":"modifier名字"},"hModifierTable":{"params_name":"hModifierTable","description":"modifier参数表"}},"example":"hCaster:AddNewModifier(hCaster, hAbility, \"modifier_test_buff\", {duration = 6, a = 3})\nfunction modifier_test_buff:OnCreated(params)\n\tlocal a = params.a\nend"},"ABILITY_TYPE_ATTRIBUTES":{"description_lite":"一般视为天赋技能类型"},"ABILITY_TYPE_BASIC":{"description_lite":"基础技能类型"},"ABILITY_TYPE_HIDDEN":{"description_lite":"隐藏技能，无效，使用DOTA_ABILITY_BEHAVIOR中的DOTA_ABILITY_BEHAVIOR_HIDDEN"},"ABILITY_TYPE_ULTIMATE":{"description_lite":"终极技能类型，拥有默认快捷键"},"DOTA_ATTRIBUTE_AGILITY":{"description_lite":"敏捷属性"},"DOTA_ATTRIBUTE_INTELLECT":{"description_lite":"智力属性"},"DOTA_ATTRIBUTE_STRENGTH":{"description_lite":"力量属性"},"DAMAGE_TYPE_PURE":{"description_lite":"纯粹伤害，不计算护甲与魔抗，无视伤害格挡。"},"DAMAGE_TYPE_PHYSICAL":{"description_lite":"物理伤害，受到护甲与伤害格挡影响，跟魔法抗性无关，不能影响虚无单位。"},"DAMAGE_TYPE_MAGICAL":{"description_lite":"魔法伤害，受到魔法抗性的影响。"},"DOTA_TEAM_BADGUYS":{"description_lite":"夜魇"},"DOTA_TEAM_GOODGUYS":{"description_lite":"天辉"},"DOTA_TEAM_NEUTRALS":{"description_lite":"中立"},"DOTA_UNIT_CAP_MOVE_FLY":{"description_lite":"飞行移动能力"},"DOTA_UNIT_CAP_MOVE_GROUND":{"description_lite":"地面移动能力"},"DOTA_UNIT_CAP_MOVE_NONE":{"description_lite":"没有移动能力"},"DOTA_DAMAGE_FLAG_HPLOSS":{"description_lite":"生命移除"},"DOTA_DAMAGE_FLAG_NON_LETHAL":{"description_lite":"不致死"},"DOTA_DAMAGE_FLAG_REFLECTION":{"description_lite":"不反弹"},"DOTA_DAMAGE_FLAG_NO_SPELL_LIFESTEAL":{"description_lite":"没有技能吸血"},"DOTA_DAMAGE_FLAG_NO_SPELL_AMPLIFICATION":{"description_lite":"没有技能增强"},"DOTA_DAMAGE_FLAG_NONE":{"description_lite":"没有"},"DOTA_DAMAGE_FLAG_IGNORES_MAGIC_ARMOR":{"description_lite":"无视魔抗"},"DOTA_DAMAGE_FLAG_IGNORES_PHYSICAL_ARMOR":{"description_lite":"无视护甲"},"DOTA_DAMAGE_FLAG_IGNORES_BASE_PHYSICAL_ARMOR":{"description_lite":"无视基础护甲"},"DOTA_DAMAGE_FLAG_DONT_DISPLAY_DAMAGE_IF_SOURCE_HIDDEN":{"description_lite":"当伤害来源不可见时，不显示造成的伤害。"},"DOTA_DAMAGE_FLAG_BYPASSES_BLOCK":{"description_lite":"绕过伤害格挡"},"DOTA_DAMAGE_FLAG_BYPASSES_INVULNERABILITY":{"description_lite":"绕过无敌"},"DOTA_DAMAGE_FLAG_PROPERTY_FIRE":{"description_lite":"火焰属性"},"DOTA_RUNE_ARCANE":{"description_lite":"奥术神符"},"DOTA_RUNE_BOUNTY":{"description_lite":"赏金神符"},"DOTA_RUNE_DOUBLEDAMAGE":{"description_lite":"双倍神符"},"DOTA_RUNE_HASTE":{"description_lite":"急速神符"},"DOTA_RUNE_ILLUSION":{"description_lite":"幻象神符"},"DOTA_RUNE_INVISIBILITY":{"description_lite":"隐身神符"},"DOTA_RUNE_REGENERATION":{"description_lite":"恢复神符"},"DOTA_ABILITY_BEHAVIOR_AOE":{"description_lite":"范围型技能"},"DOTA_ABILITY_BEHAVIOR_AURA":{"description_lite":"光环"},"DOTA_ABILITY_BEHAVIOR_AUTOCAST":{"description_lite":"自动施法"},"DOTA_ABILITY_BEHAVIOR_CAN_SELF_CAST":{"description_lite":"不能对自己施放，仅做显示用。"},"DOTA_ABILITY_BEHAVIOR_CHANNELLED":{"description_lite":"持续施法"},"DOTA_ABILITY_BEHAVIOR_HIDDEN":{"description_lite":"隐藏"},"DOTA_ABILITY_BEHAVIOR_IGNORE_BACKSWING":{"description_lite":"无视后摇"},"DOTA_ABILITY_BEHAVIOR_IMMEDIATE":{"description_lite":"立即"},"DOTA_ABILITY_BEHAVIOR_NOT_LEARNABLE":{"description_lite":"不能学习"},"DOTA_ABILITY_BEHAVIOR_NO_TARGET":{"description_lite":"无目标"},"DOTA_ABILITY_BEHAVIOR_PASSIVE":{"description_lite":"被动"},"DOTA_ABILITY_BEHAVIOR_POINT":{"description_lite":"点目标"},"DOTA_ABILITY_BEHAVIOR_ROOT_DISABLES":{"description_lite":"缠绕时不可用"},"DOTA_ABILITY_BEHAVIOR_RUNE_TARGET":{"description_lite":"可选神符目标"},"DOTA_ABILITY_BEHAVIOR_TOGGLE":{"description_lite":"开关型"},"DOTA_ABILITY_BEHAVIOR_UNIT_TARGET":{"description_lite":"单位目标"},"DOTA_ABILITY_BEHAVIOR_VECTOR_TARGETING":{"description_lite":"矢量技能"},"UF_FAIL_ANCIENT":{"description_lite":"无法对远古单位施放"},"UF_FAIL_ATTACK_IMMUNE":{"description_lite":"目标无法被攻击"},"UF_FAIL_BUILDING":{"description_lite":"无法对建筑物施放"},"UF_FAIL_CONSIDERED_HERO":{"description_lite":"技能不能以此英雄为目标"},"UF_FAIL_COURIER":{"description_lite":"无法对信使施放"},"UF_FAIL_CREEP":{"description_lite":"无法对普通单位施放"},"UF_FAIL_CUSTOM":{"description_lite":"自定义"},"UF_FAIL_DEAD":{"description_lite":"死亡"},"UF_FAIL_DISABLE_HELP":{"description_lite":"目标设置了禁用帮助"},"UF_FAIL_DOMINATED":{"description_lite":"无法对被支配单位施放"},"UF_FAIL_ENEMY":{"description_lite":"无法对敌军施放"},"UF_FAIL_FRIENDLY":{"description_lite":"无法对友军施放"},"UF_FAIL_HERO":{"description_lite":"无法对英雄施放"},"UF_FAIL_ILLUSION":{"description_lite":"技能无法以幻象为目标"},"UF_FAIL_INVALID_LOCATION":{"description_lite":"无效目标"},"DOTA_UNIT_TARGET_FLAG_CHECK_DISABLE_HELP":{"description_lite":"检查是否禁用帮助"},"DOTA_UNIT_TARGET_FLAG_DEAD":{"description_lite":"死亡单位"},"DOTA_UNIT_TARGET_FLAG_FOW_VISIBLE":{"description_lite":"迷雾可见"},"DOTA_UNIT_TARGET_FLAG_INVULNERABLE":{"description_lite":"无敌"},"DOTA_UNIT_TARGET_FLAG_MAGIC_IMMUNE_ENEMIES":{"description_lite":"魔法免疫的敌人"},"DOTA_UNIT_TARGET_FLAG_MANA_ONLY":{"description_lite":"拥有魔法"},"DOTA_UNIT_TARGET_FLAG_MELEE_ONLY":{"description_lite":"只有近战"},"DOTA_UNIT_TARGET_FLAG_NONE":{"description_lite":"没有标记"},"DOTA_UNIT_TARGET_FLAG_NOT_ANCIENTS":{"description_lite":"没有远古单位"},"DOTA_UNIT_TARGET_FLAG_NOT_ATTACK_IMMUNE":{"description_lite":"没有攻击免疫单位"},"DOTA_UNIT_TARGET_FLAG_NOT_DOMINATED":{"description_lite":"没有被支配的单位"},"DOTA_UNIT_TARGET_FLAG_NOT_CREEP_HERO":{"description_lite":"没有英雄级普通单位"},"DOTA_UNIT_TARGET_FLAG_NOT_ILLUSIONS":{"description_lite":"没有幻象"},"DOTA_UNIT_TARGET_FLAG_NOT_MAGIC_IMMUNE_ALLIES":{"description_lite":"没有魔法免疫的单位"},"DOTA_UNIT_TARGET_FLAG_NOT_NIGHTMARED":{"description_lite":"没有噩梦状态单位"},"DOTA_UNIT_TARGET_FLAG_NOT_SUMMONED":{"description_lite":"没有召唤物"},"DOTA_UNIT_TARGET_FLAG_NO_INVIS":{"description_lite":"没有隐身单位"},"DOTA_UNIT_TARGET_FLAG_OUT_OF_WORLD":{"description_lite":"不在游戏中的单位"},"DOTA_UNIT_TARGET_FLAG_PLAYER_CONTROLLED":{"description_lite":"玩家控制的单位"},"DOTA_UNIT_TARGET_FLAG_RANGED_ONLY":{"description_lite":"只有远程"},"DOTA_UNIT_TARGET_TEAM_ENEMY":{"description_lite":"敌方队伍"},"DOTA_UNIT_TARGET_TEAM_FRIENDLY":{"description_lite":"友方队伍"},"DOTA_UNIT_TARGET_TEAM_BOTH":{"description_lite":"双方队伍"},"DOTA_UNIT_TARGET_TEAM_NONE":{"description_lite":"没有队伍"},"DOTA_UNIT_TARGET_NONE":{"description_lite":"没有目标"},"DOTA_UNIT_TARGET_HERO":{"description_lite":"英雄目标"},"DOTA_UNIT_TARGET_TREE":{"description_lite":"以树为目标"},"DOTA_UNIT_TARGET_CREEP":{"description_lite":"普通单位目标"},"DOTA_UNIT_TARGET_COURIER":{"description_lite":"信使目标"},"DOTA_UNIT_TARGET_BUILDING":{"description_lite":"以防御塔为目标"},"DOTA_UNIT_TARGET_BASIC":{"description_lite":"DOTA_UNIT_TARGET_COURIER + DOTA_UNIT_TARGET_CREEP"},"MODIFIER_STATE_ATTACK_IMMUNE":{"description_lite":"攻击免疫"},"MODIFIER_STATE_BLOCK_DISABLED":{"description_lite":"禁用格挡"},"MODIFIER_STATE_COMMAND_RESTRICTED":{"description_lite":"无法执行命令"},"MODIFIER_STATE_DISARMED":{"description_lite":"缴械"},"MODIFIER_STATE_DOMINATED":{"description_lite":"支配，可用于过滤是否是支配单位"},"MODIFIER_STATE_EVADE_DISABLED":{"description_lite":"无法闪避"},"MODIFIER_STATE_CANNOT_MISS":{"description_lite":"不会丢失，无视闪避"},"MODIFIER_STATE_FLYING":{"description_lite":"飞行"},"MODIFIER_STATE_FLYING_FOR_PATHING_PURPOSES_ONLY":{"description_lite":"贴地飞行"},"MODIFIER_STATE_FROZEN":{"description_lite":"冰冻，动作会暂停"},"MODIFIER_STATE_HEXED":{"description_lite":"妖术，头顶会有妖术进度条"},"MODIFIER_STATE_IGNORING_MOVE_AND_ATTACK_ORDERS":{"description_lite":"禁用移动与攻击指令"},"MODIFIER_STATE_IGNORING_STOP_ORDERS":{"description_lite":"禁用停止指令"},"MODIFIER_STATE_INVISIBLE":{"description_lite":"隐身"},"MODIFIER_STATE_INVULNERABLE":{"description_lite":"无敌"},"MODIFIER_STATE_LOW_ATTACK_PRIORITY":{"description_lite":"低攻击优先级"},"MODIFIER_STATE_MAGIC_IMMUNE":{"description_lite":"魔法免疫"},"MODIFIER_STATE_NIGHTMARED":{"description_lite":"睡眠，头上会有睡眠进度条"},"MODIFIER_STATE_MUTED":{"description_lite":"锁闭，禁用物品，头上有锁闭进度条"},"MODIFIER_STATE_NOT_ON_MINIMAP":{"description_lite":"没有小地图图标"},"MODIFIER_STATE_NOT_ON_MINIMAP_FOR_ENEMIES":{"description_lite":"对敌人没有小地图图标"},"MODIFIER_STATE_NO_HEALTH_BAR":{"description_lite":"没有生命条"},"MODIFIER_STATE_NO_UNIT_COLLISION":{"description_lite":"没有碰撞体积"},"MODIFIER_STATE_OUT_OF_GAME":{"description_lite":"离开游戏"},"MODIFIER_STATE_PASSIVES_DISABLED":{"description_lite":"破坏，禁用被动，头上有破坏进度条"},"MODIFIER_STATE_PROVIDES_VISION":{"description_lite":"提供视野"},"MODIFIER_STATE_ROOTED":{"description_lite":"缠绕，头上有缠绕进度条"},"MODIFIER_STATE_SILENCED":{"description_lite":"沉默，头上有沉默进度条"},"MODIFIER_STATE_SPECIALLY_DENIABLE":{"description_lite":"可被反补"},"MODIFIER_STATE_STUNNED":{"description_lite":"晕眩，头上有晕眩进度条"},"MODIFIER_STATE_TETHERED":{"description_lite":"束缚，头上有束缚进度条"},"MODIFIER_STATE_TRUESIGHT_IMMUNE":{"description_lite":"真视免疫"},"MODIFIER_STATE_UNSELECTABLE":{"description_lite":"不可选择"},"MODIFIER_STATE_UNSLOWABLE":{"description_lite":"无法减速"},"MODIFIER_STATE_UNTARGETABLE":{"description_lite":"无法作为目标"},"ApplyDamage":{"description":"对一个单位造成伤害，输入tDamageTable: victim, attacker, damage, damage_type, damage_flags, ability","params":{"handle_1":{"params_name":"tDamageTable","description":"包含受害者、攻击者、伤害、伤害类型、伤害标记和技能来源的表格"}},"example":"-- 对玩家1的英雄对自己造成500纯粹伤害\n\nlocal hPlayerHero = PlayerResource:GetPlayer(1):GetAssignedHero()\nlocal damageTable = {\n\tvictim = hPlayerHero,\n\tattacker = hPlayerHero,\n\tdamage = 500,\n\tdamage_type = DAMAGE_TYPE_PURE,\n\tdamage_flags = DOTA_DAMAGE_FLAG_NONE, --Optional.\n\tability = playerHero:GetAbilityByIndex(0), --Optional.\n}\nApplyDamage(damageTable)"},"CreateIllusions":{"description":"使用传入的数据创建属于传入单位的英雄幻象。 ( hOwner, hHeroToCopy, hModiiferKeys, nNumIllusions, nPadding, bScramblePosition, bFindClearSpace ) 可选参数：outgoing_damage, incoming_damage, bounty_base, bounty_growth, outgoing_damage_structure, outgoing_damage_roshan","params":{"handle_1":{"params_name":"hOwner","description":"拥有者"},"handle_2":{"params_name":"hHeroToCopy","description":"复制的英雄"},"handle_3":{"params_name":"hModiiferKeys","description":"修改器参数"},"int_4":{"params_name":"nNumIllusions","description":"幻象数量"},"int_5":{"params_name":"nPadding","description":"nPadding"},"bool_6":{"params_name":"bScramblePosition","description":"bScramblePosition"},"bool_7":{"params_name":"bFindClearSpace","description":"是否寻找空位"}},"example":"-- 创建2个玩家1的英雄幻象\n\nlocal hPlayerHero = PlayerResource:GetPlayer(1):GetAssignedHero()\nlocal illusions = CreateIllusions(hPlayerHero, hPlayerHero, {\n\toutgoing_damage = 50,\t-- 造成50%的伤害\n\tincoming_damage = 300,\t-- 受到300%的伤害\n\tbounty_base = 15,\t-- 击杀获得15金钱\n\toutgoing_damage_structure = 10,\t-- 对建筑造成10%伤害\n\toutgoing_damage_roshan = 60\t-- 对肉山造成60%伤害\n}, nNumIllusions, nPadding, bScramblePosition, bFindClearSpace)"},"MODIFIER_STATE_ALLOW_PATHING_TROUGH_TREES":{"description_lite":"允许在树木中通行"},"MODIFIER_STATE_BLIND":{"description_lite":"致盲，完全失去视野"},"MODIFIER_STATE_CANNOT_TARGET_ENEMIES":{"description_lite":"禁用单位目标命令"},"DOTA_DAMAGE_CATEGORY_ATTACK":{"description_lite":"攻击伤害类型"},"DOTA_DAMAGE_CATEGORY_SPELL":{"description_lite":"施法伤害类型"},"MODIFIER_PRIORITY_HIGH":{"description_lite":"高优先级"},"MODIFIER_PRIORITY_LOW":{"description_lite":"低优先级"},"MODIFIER_PRIORITY_NORMAL":{"description_lite":"普通优先级"},"MODIFIER_PRIORITY_SUPER_ULTRA":{"description_lite":"最高优先级"},"MODIFIER_PRIORITY_ULTRA":{"description_lite":"更高优先级"},"CalcDistanceBetweenEntityOBB":{"description":"计算两个实体间的OBB包围盒距离","example":"local hPlayerHero_1 = PlayerResource:GetPlayer(1):GetAssignedHero()\nlocal hPlayerHero_2 = PlayerResource:GetPlayer(1):GetAssignedHero()\nlocal flDistance = CalcDistanceBetweenEntityOBB(hPlayerHero_1, hPlayerHero_2)","params":{"handle_1":{"params_name":"handle_1","description":"实体1"},"handle_2":{"params_name":"handle_2","description":"实体2"}}},"CreateItem":{"description":"创建一个物品","example":"function windrunner_windrun:OnSpellStart()\n\tlocal hCaster = self:GetCaster()\n\tlocal hItem = CreateItem(\"item_rapier_shareable\", hCaster, hCaster)\n\thCaster:AddItem(hItem)\nend","params":{"handle_2":{"description":"拥有者","params_name":"hOwner"},"handle_3":{"description":"拥有者","params_name":"hOwner"},"string_1":{"description":"物品名字","params_name":"sItemName"}}},"MODIFIER_EVENT_ON_ABILITY_END_CHANNEL":{"description_lite":"当持续施法结束","example":"function modifier_silencer_last_word:DeclareFunctions()\n\treturn {\n\t\tMODIFIER_EVENT_ON_ABILITY_END_CHANNEL,\n\t}\nend\nfunction modifier_silencer_last_word:OnAbilityEndChannel(params)\n\tif IsServer() then\n\t\tif params.unit==self:GetParent() and not params.ability:IsItem() then\n\t\t\tself:Destroy()\n\t\tend\n\tend\nend"},"CreateLinearProjectile":{"description":"创建一个线性投射物，返回投射物ID。参数: Ability, Source, vSpawnOrigin, vVelocity, vAcceleration, fDistance, fStartRadius, fEndRadius, bHasFrontalCone, iUnitTargetTeam, iUnitTargetType, iUnitTargetFlags, bProvidesVision, iVisionTeamNumber, iVisionRadius, bDrawsOnMinimap, bVisibleToEnemies, bIgnoreSource,fExpireTime, fMaxSpeed","example":"-- 创建一个月神箭\nfunction mirana_arrow:OnSpellStart()\n\tlocal hCaster = self:GetCaster()\n\tlocal vPosition = self:GetCursorPosition()\n\tlocal iSpeed = 1800\n\tlocal tInfo = \n\t{\n\t\tAbility = self, -- 技能\n        \tEffectName = \"particles/units/heroes/hero_mirana/mirana_spell_arrow.vpcf\", -- 投射物特效\n        \tvSpawnOrigin = hCaster:GetAttachmentOrigin(hCaster:ScriptLookupAttachment(\"attach_attack1\")), -- 投射物起点\n        \tfDistance = 2000, -- 最大距离\n        \tfStartRadius = 64, -- 起始半径\n        \tfEndRadius = 64, -- 终点半径\n        \tSource = hCaster, -- 来源单位\n        \tbHasFrontalCone = false, -- 是否有前椎体\n        \tbReplaceExisting = false, -- 替换已经存在的投射物\n        \tiUnitTargetTeam = DOTA_UNIT_TARGET_TEAM_ENEMY, -- 目标队伍\n        \tiUnitTargetFlags = DOTA_UNIT_TARGET_FLAG_NONE, -- 目标标记\n        \tiUnitTargetType = DOTA_UNIT_TARGET_HERO + DOTA_UNIT_TARGET_BASIC, -- 目标类型\n        \tfExpireTime = GameRules:GetGameTime() + 10.0, -- 销毁时间\n\t\tbDeleteOnHit = true, -- 击中后是否销毁\n\t\tvVelocity = (vPosition - hCaster:GetAbsOrigin()):Normalized() * iSpeed, -- 速度\n\t\tbProvidesVision = true, -- 是否提供视野\n\t\tiVisionRadius = 1000, -- 视野半径\n\t\tiVisionTeamNumber = hCaster:GetTeamNumber(), -- 视野队伍\n\t\tExtraData = \n\t\t{\n\t\t\tflDamage = 360,\n\t\t},\n\t}\n\tprojectile = ProjectileManager:CreateLinearProjectile(tInfo)\nend","params":{"handle_1":{"description":"投射物参数","params_name":"tInfo"}}},"OnProjectileHit_ExtraData":{"description":"当投射物命中目标或者到达最远距离（此时hTarget为无效值）","example":"function mirana_arrow:OnProjectileHit_ExtraData(hTarget, vLocation, ExtraData)\n\tlocal hCaster = self:GetCaster()\n\tlocal tDamageTable = \n\t{\n\t\tability = self,\n\t\tattacker = hCaster,\n\t\tvictim = hTarget,\n\t\tdamage = ExtraData.flDamage\n\t\tdamage_type = self:GetAbilityDamageType()\n\t}\n\tApplyDamage(damage_table)\n\treturn true -- 返回true会销毁投射物\nend","params":{"hTarget":{"description":"击中的目标","params_name":"hTarget"},"table":{"description":"额外参数","params_name":"ExtraData"},"vLocation":{"description":"目标位置","params_name":"vLocation"}}},"MODIFIER_PROPERTY_RESPAWNTIME_PERCENTAGE":{"description":"复活时间缩减百分比，最大值为1，即没有复活时间。","description_lite":"复活时间缩减百分比","example":"function modifier_respawntime_percent:DeclareFunctions()\n\treturn {\n\t\tMODIFIER_PROPERTY_RESPAWNTIME_PERCENTAGE\n\t}\nend\n\nfunction modifier_respawntime_percent:GetModifierPercentageRespawnTime(params)\n\treturn 1 - (0.5 + self:GetParent():GetLevel() / 100)\nend"},"MODIFIER_PROPERTY_SPELL_AMPLIFY_PERCENTAGE":{"description":"技能增强百分比，多个效果非线性叠加。","description_lite":"技能增强百分比","example":"-- 30%技能增强\nfunction modifier_item_bloodthorn:DeclareFunctions()\n\treturn {\n\t\tMODIFIER_PROPERTY_SPELL_AMPLIFY_PERCENTAGE\n\t}\nend\nfunction modifier_item_bloodthorn:GetModifierSpellAmplify_Percentage(params)\n\treturn 30\nend"},"MODIFIER_EVENT_ON_HERO_KILLED":{"description":"击杀英雄事件。传进来的参数里attacker为玩家的主英雄，unit为实际凶手单位，target为死亡目标。","description_lite":"击杀英雄事件","example":"function modifier_phantom_assassin_blur_imba:DeclareFunctions()\n\treturn {\n\t\tMODIFIER_EVENT_ON_HERO_KILLED,\n\t}\nend\nfunction modifier_phantom_assassin_blur_imba:OnHeroKilled(params)\n\t-- params.attacker\t玩家控制的主英雄\n\t-- params.unit\t\t实际凶手\n\t-- params.target\t死亡目标\n\tif params.unit == self:GetParent() then\n\t\tif params.unit:HasScepter() then\n\t\t\tfor i = 0, params.unit:GetAbilityCount()-1, 1 do\n\t\t\t\tlocal hAbility = params.unit:GetAbilityByIndex(i)\n\t\t\t\tif hAbility and hAbility:GetAbilityType() == ABILITY_TYPE_BASIC then\t-- 刷新基础技能\n\t\t\t\t\thAbility:EndCooldown()\n\t\t\t\t\thAbility:RefreshCharges()\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\nend"},"HasScepter":{"description":"判断单位是否拥有阿哈利姆神杖升级效果","example":"function test_ability:OnSpellStart()\n\tlocal bHasScepter = self:GetCaster():HasScepter()\nend"},"GetSpecialValueFor":{"description":"从该技能的当前等级的特殊值中获取值。","example":"function phantom_assassin_blur_imba:OnSpellStart()\n\tlocal hCaster = self:GetCaster()\n\tlocal duration = self:GetSpecialValueFor(\"duration\")\nend","params":{"szName":{"description":"特殊值名字","params_name":"szName"}}},"GetIntrinsicModifierName":{"description":"返回此技能被动给予的修饰器的名称","example":"function phantom_assassin_blur_imba:GetIntrinsicModifierName()\n\treturn \"modifier_phantom_assassin_blur_imba\"\nend"},"SetParticleFoWProperties":{"description":"设置粒子特效在战争迷雾中的属性。控制点为中心半径为flRadius的圆处于战争迷雾外，该特效即对敌人可见。如果填两个控制点则两点间的宽度为flRadius的矩形范围也计算。不填为-1。","example":"-- 风暴之灵超负荷特效\nlocal iParticleID = ParticleManager:CreateParticle(ParticleManager:GetParticleReplacement(\"particles/units/heroes/hero_stormspirit/stormspirit_overload_discharge.vpcf\", params.attacker), PATTACH_WORLDORIGIN, nil)\nParticleManager:SetParticleControl(iParticleID, 0, params.target:GetAbsOrigin())\nParticleManager:SetParticleFoWProperties(iParticleID, 0, -1, self.overload_aoe)\nParticleManager:ReleaseParticleIndex(iParticleID)","params":{"float_4":{"description":"半径","params_name":"flRadius"},"int_1":{"description":"特效ID","params_name":"iParticleID"},"int_2":{"description":"第一个控制点","params_name":"iControlPoint"},"int_3":{"description":"第二个控制点","params_name":"iControlPoint2"}}},"MODIFIER_PROPERTY_OVERRIDE_ATTACK_DAMAGE":{"description":"重写攻击伤害，该效果无视格挡效果。","description_lite":"重写攻击伤害","example":"function modifier_razor_eye_of_the_storm_attack_effect_imba:DeclareFunctions()\n\treturn {\n\t\tMODIFIER_PROPERTY_OVERRIDE_ATTACK_DAMAGE,\n\t}\nend\nfunction modifier_razor_eye_of_the_storm_attack_effect_imba:GetModifierOverrideAttackDamage(params)\n\treturn self:GetAbilitySpecialValueFor(\"damage\")\nend"},"GetDOTATime":{"description":"(b IncludePregameTime b IncludeNegativeTime) Returns the actual DOTA in-game clock time.\n返回Dota游戏内的时间。（是否包含赛前时间或负时间）","example":"undefined","params":{"bool_1":{"description":"是否包含赛前时间","params_name":"IncludePregameTime "},"bool_2":{"description":"负时间","params_name":"IncludeNegativeTime"}}},"MODIFIER_EVENT_ON_ABILITY_EXECUTED":{"description":"当任意类型技能使用时触发","description_lite":"当技能使用时","example":"No Example Set"},"MODIFIER_EVENT_ON_ABILITY_FULLY_CAST":{"description":"当技能完成释放时触发，不会触发切换型技能，事件在MODIFIER_EVENT_ON_ABILITY_EXECUTED后触发。","description_lite":"当技能完成释放","example":"No Example Set"},"MODIFIER_EVENT_ON_ABILITY_START":{"description":"当技能开始抬手时就会触发，不会触发切换技能。","description_lite":"当技能开始时","example":"No Example Set"},"MODIFIER_EVENT_ON_BREAK_INVISIBILITY":{"description":"No Description Set","description_lite":"当打破隐身时（测试无效）","example":"No Example Set"},"MODIFIER_EVENT_ON_BUILDING_KILLED":{"description":"No Description Set","description_lite":"（测试无效）","example":"No Example Set"},"CreateParticle":{"description":"创建一个新的粒子特效，返回特效ID","example":"undefined","params":{"handle_3":{"description":"附着单位","params_name":"hOwner"},"int_2":{"description":"特效附着方式","params_name":"iAttachment"},"string_1":{"description":"特效完整路径名字","params_name":"sParticleName"}}},"DestroyParticle":{"description":"删除一个粒子特效。如果选择立即删除，将不会播放粒子的结束特效。","example":"undefined","params":{"bool_2":{"description":"是否立即删除","params_name":"bDestroyImmediately"},"int_1":{"description":"特效ID","params_name":"iIndex"}}},"GetParticleReplacement":{"description":"获取该粒子特效在该单位身上的替换版本","example":"ParticleManager:GetParticleReplacement(\"particles/units/heroes/hero_night_stalker/nightstalker_ulti.vpcf\", hCaster)","params":{"handle_2":{"description":"单位","params_name":"hCaster"},"string_1":{"description":"特效完整路径名字","params_name":"sParticleName"}}},"ABILITY_CANNOT_BE_UPGRADED_AT_MAX":{"description":"技能不能升级，因为已达到最大等级","description_lite":"技能已达到最大等级","example":"No Example Set"},"ABILITY_CANNOT_BE_UPGRADED_REQUIRES_LEVEL":{"description":"No Description Set","description_lite":"单位未达到需求等级","example":"No Example Set"},"ABILITY_CAN_BE_UPGRADED":{"description":"No Description Set","description_lite":"技能可被升级","example":"No Example Set"},"ABILITY_NOT_LEARNABLE":{"description":"No Description Set","description_lite":"不能学习的技能类型","example":"No Example Set"},"DOTA_ATTRIBUTE_AGILITY_ARMOR":{"description":"No Description Set","description_lite":"每点敏捷增加的护甲值","example":"No Example Set"},"DOTA_ATTRIBUTE_AGILITY_ATTACK_SPEED":{"description":"No Description Set","description_lite":"每点敏捷增加的攻击速度","example":"No Example Set"},"DOTA_ATTRIBUTE_AGILITY_DAMAGE":{"description":"No Description Set","description_lite":"每点主属性敏捷增加的攻击力","example":"No Example Set"},"DOTA_ATTRIBUTE_AGILITY_MOVE_SPEED_PERCENT":{"description":"No Description Set","description_lite":"每点敏捷增加的移动速度百分比","example":"No Example Set"},"DOTA_ATTRIBUTE_INTELLIGENCE_DAMAGE":{"description":"No Description Set","description_lite":"每点主属性智力增加的攻击力","example":"No Example Set"},"DOTA_ATTRIBUTE_INTELLIGENCE_MAGIC_RESISTANCE_PERCENT":{"description":"No Description Set","description_lite":"每点智力增加的魔法抗性","example":"No Example Set"},"DOTA_ATTRIBUTE_INTELLIGENCE_MANA":{"description":"No Description Set","description_lite":"每点智力增加的魔法值","example":"No Example Set"},"DOTA_ATTRIBUTE_INTELLIGENCE_MANA_REGEN":{"description":"No Description Set","description_lite":"每点智力增加的魔法回复","example":"No Example Set"},"DOTA_ATTRIBUTE_INTELLIGENCE_SPELL_AMP_PERCENT":{"description":"No Description Set","description_lite":"每点智力增加的技能增强","example":"No Example Set"},"DOTA_ATTRIBUTE_STRENGTH_DAMAGE":{"description":"No Description Set","description_lite":"每点主属性力量增加的攻击力","example":"No Example Set"},"DOTA_ATTRIBUTE_STRENGTH_HP":{"description":"No Description Set","description_lite":"每点力量增加的生命值","example":"No Example Set"},"DOTA_ATTRIBUTE_STRENGTH_HP_REGEN":{"description":"No Description Set","description_lite":"每点力量增加的生命回复","example":"No Example Set"},"DOTA_ATTRIBUTE_STRENGTH_MAGIC_RESISTANCE_PERCENT":{"description":"No Description Set","description_lite":"每点力量增加的魔法抗性","example":"No Example Set"},"DOTA_ATTRIBUTE_STRENGTH_STATUS_RESISTANCE_PERCENT":{"description":"No Description Set","description_lite":"每点力量增加的状态抗性","example":"No Example Set"},"MODIFIER_ATTRIBUTE_IGNORE_INVULNERABLE":{"description":"No Description Set","description_lite":"无敌保持","example":"No Example Set"},"MODIFIER_ATTRIBUTE_MULTIPLE":{"description":"No Description Set","description_lite":"可重复","example":"No Example Set"},"MODIFIER_ATTRIBUTE_PERMANENT":{"description":"No Description Set","description_lite":"死亡保持","example":"No Example Set"},"GetOpposingTeamNumber":{"description":"获取敌方的队伍编号","example":"local hParent = self:GetParent()\nIsLocationVisible(hParent:GetOpposingTeamNumber(), hParent:GetAbsOrigin())"},"IsLocationVisible":{"description":"判断某个位置对某个队伍是否在战争迷雾中","example":"local hParent = self:GetParent()\nIsLocationVisible(hParent:GetOpposingTeamNumber(), hParent:GetAbsOrigin())","params":{"Vector_2":{"description":"位置","params_name":"vLocation"},"int_1":{"description":"队伍编号","params_name":"iTeamNumber"}}}}